%implements s370_b0_kju7n_6_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

uint32_T PwrOnCtrl_ELAPS_T;
real_T u1;
uint32_T PwrOnCtrl_ELAPS_T_tmp;
%closefile localVarDecl
%assign tlcOutputsFcnOfS37B5 = OpaqueTLCBlockFcn("Outputs", 37, 5, 6, 3)
%assign tlcOutputsFcnOfS37B6 = OpaqueTLCBlockFcn("Outputs", 37, 6, 6, 3)
PwrOnCtrl_ELAPS_T_tmp = %<(SLibCG_SE(LibGetClockTick(1)))>;
PwrOnCtrl_ELAPS_T = PwrOnCtrl_ELAPS_T_tmp - DWork.PwrOnCtrl_PREV_T;
DWork.PwrOnCtrl_PREV_T = PwrOnCtrl_ELAPS_T_tmp;
/* UnitDelay: '<S412>/Unit Delay1' */
%<SLibCG_DumpSSCode("/*@[56b89*/",SLibCG_SetBOCSC(156, 1, "", -1, "", 0, "/*@>56e3b*/DWork./*@>56e3a*/UnitDelay1_DSTATE"),"/*@]*/")>\
/* Switch: '<S418>/Switch' incorporates:
 *  Constant: '<S412>/Read Calibration'
 *  Logic: '<S415>/Logical Operator2'
 *  Logic: '<S415>/Logical Operator5'
 *  MinMax: '<S419>/MinMax'
 *  RelationalOperator: '<S415>/edge'
 *  Sum: '<S418>/Sum1'
 *  UnitDelay: '<S415>/Unit Delay'
 *  UnitDelay: '<S418>/Unit Delay'
 */
/*@>41a34*/if ((%<SLibCG_DumpSSCode("/*@[56b33*/",(SLibCG_SE(SLibCG_BOCSC(156, 1, "", -1, "", 0))),"/*@]*/")>/*@>556f0*/ != /*@>56887*/DWork./*@>56dd4*/UnitDelay_DSTATE_b4)/*@>556b7*/ && (!/*@<556f6*/%<SLibCG_DumpSSCode("/*@[56b17*/",(SLibCG_SE(SLibCG_BOCSC(156, 1, "", -1, "", 0))),"/*@]*/")>)) {
    /*@>5688d*/DWork./*@>56dd7*/UnitDelay_DSTATE_l/*@>41a2c*/ = %<SLibCG_DumpSSCode("/*@[56ba6*/",(SLibCG_SE(SLibCGIR_CSCP(508, 0, 1, "", -1, "", 0))),"/*@]*/")>;
} else {
    /* SampleTimeMath: '<S419>/sample time1'
 *
 * About '<S419>/sample time1':
 *  y = K where K = ( w * Ts )
 */
    /*@>55eb8*/u1/*@>55eba*/ = /*@>55de4*/(real_T)/*@>55d68*/PwrOnCtrl_ELAPS_T/*@>55d8e*/ * /*@>55d6a*/0.005;
    /* MinMax: '<S419>/MinMax' */
    /*@>560ae*/if (/*@>56001*/0.001/*@>56000*/ > /*@>56003*/u1) {
        /*@>560b2*/u1/*@>560b1*/ = /*@>56004*/0.001;
    }
    /*@>56899*/DWork./*@>56ddd*/UnitDelay_DSTATE_l/*@>56d5f*/ -= /*@>55702*/(real32_T)/*@>560ab*/u1;
}
/* End of Switch: '<S418>/Switch' */

/* MinMax: '<S418>/MinMax' */
/*@>560a1*/if (/*@>56893*/DWork./*@>56dda*/UnitDelay_DSTATE_l/*@>55e92*/ > /*@>55f5d*/0.0F) {
} else {
    /*@>568a5*/DWork./*@>56de0*/UnitDelay_DSTATE_l/*@>55e98*/ = /*@>55f5f*/0.0F;
}
/* End of MinMax: '<S418>/MinMax' */

/* Switch: '<S415>/debounce' incorporates:
 *  Constant: '<S418>/Constant2'
 *  RelationalOperator: '<S418>/Relational Operator2'
 *  UnitDelay: '<S418>/Unit Delay'
 */
/*@>55b86*/if (/*@>568ab*/DWork./*@>56de3*/UnitDelay_DSTATE_l/*@>556cd*/ == /*@>55d6d*/0.0F) {
%<SLibCG_DumpSSCode("/*@[56bfc*/",SLibCG_SetBOCSC(157, 1, "", -1, "", 0, "%<SLibCG_DumpSSCode("/*@[56e4e*/",(SLibCG_BOCSC(156, 1, "", -1, "", 0)),"/*@]*/")>"),"/*@]*/")>\
}
/* End of Switch: '<S415>/debounce' */
%if !WHITE_SPACE(tlcOutputsFcnOfS37B5)

/* S-Function (DI_Key_In): '<S411>/KeyOn Input' */
%<SLibCG_DumpSSCode("/*@[56afa*/",tlcOutputsFcnOfS37B5,"/*@]*/")>\
%endif
/* Logic: '<S411>/Logical Operator1' incorporates:
 *  UnitDelay: '<S412>/Unit Delay1'
 */
/*@>568b1*/DWork./*@>56de6*/UnitDelay1_DSTATE/*@>4199e*/ = %<SLibCG_DumpSSCode("/*@[56b4f*/",(SLibCG_SE(SLibCG_BOCSC(158, 1, "", -1, "", 0))),"/*@]*/")>;
%if !WHITE_SPACE(tlcOutputsFcnOfS37B6)
/* S-Function (ecocoder_sfun_canrxlive): '<S411>/CAN Receive Counter' */
%<SLibCG_DumpSSCode("/*@[56afc*/",tlcOutputsFcnOfS37B6,"/*@]*/")>\
%endif
/* RelationalOperator: '<S411>/Relational Operator1' incorporates:
 *  UnitDelay: '<S411>/Unit Delay'
 */
%<SLibCG_DumpSSCode("/*@[56b6d*/",SLibCG_SetBOCSC(159, 1, "", -1, "", 0, "(/*@>56e7c*/DWork./*@>56e7b*/UnitDelay_DSTATE_cw/*@>56e7a*/ != /*@>56e7f*/B./*@>56e7e*/CANReceiveCounter)"),"/*@]*/")>\
/* Update for UnitDelay: '<S415>/Unit Delay' */
/*@>568bd*/DWork./*@>56dec*/UnitDelay_DSTATE_b4/*@>41a95*/ = %<SLibCG_DumpSSCode("/*@[56bc2*/",(SLibCG_SE(SLibCG_BOCSC(156, 1, "", -1, "", 0))),"/*@]*/")>;
/* Update for UnitDelay: '<S411>/Unit Delay' */
/*@>568c3*/DWork./*@>56def*/UnitDelay_DSTATE_cw/*@>41ab9*/ = /*@>56578*/B./*@>56dc8*/CANReceiveCounter;
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void PwrOnCtrl(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(6, 3, fcnProtoType)>
%endfunction
